2023-07-19 15:06:00,267 - 1 - hummingbot.connector.time_synchronizer - NETWORK - Error getting server time.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/time_synchronizer.py", line 65, in update_server_time_offset_with_time_provider
    server_time_ms: float = await time_provider
  File "/home/hummingbot/hummingbot/connector/exchange/binance/binance_web_utils.py", line 69, in get_current_server_time
    response = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://api.binance.com/api/v3/time. HTTP status is 451. Error: {
  "code": 0,
  "msg": "Service unavailable from a restricted location according to 'b. Eligibility' in https://www.binance.com/en/terms. Please contact customer service if you believe you received this message in error."
}
2023-07-19 15:06:00,294 - 1 - hummingbot.connector.time_synchronizer - WARNING - Could not refresh server time. Check network connection.
2023-07-19 15:06:00,963 - 1 - hummingbot.connector.time_synchronizer - NETWORK - Error getting server time.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/time_synchronizer.py", line 65, in update_server_time_offset_with_time_provider
    server_time_ms: float = await time_provider
  File "/home/hummingbot/hummingbot/connector/exchange/bybit/bybit_web_utils.py", line 116, in get_current_server_time
    response = await api_request(
  File "/home/hummingbot/hummingbot/connector/exchange/bybit/bybit_web_utils.py", line 103, in api_request
    raise IOError(f"Error executing request {method.name} {path}. "
OSError: Error executing request GET /spot/v1/time. HTTP status is 403. Error: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>403 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The Amazon CloudFront distribution is configured to block access from your country.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: QuppWvgjDhqkLlIuXdLS2ikM2Y5oqzPmsOAPyvEjUoDKSj-nZutqjQ==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>
2023-07-19 15:06:00,966 - 1 - hummingbot.connector.time_synchronizer - WARNING - Could not refresh server time. Check network connection.
2023-07-19 15:06:01,241 - 1 - hummingbot.connector.exchange.polkadex.polkadex_exchange.PolkadexExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1152, in _create_direct_connection
    hosts = await asyncio.shield(host_resolved)
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 874, in _resolve_host
    addrs = await self._resolver.resolve(host, port, family=self._family)
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/resolver.py", line 33, in resolve
    infos = await self._loop.getaddrinfo(
  File "/opt/conda/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 825, in getaddrinfo
    return await self.run_in_executor(
  File "/opt/conda/envs/hummingbot/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/opt/conda/envs/hummingbot/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -2] Name or service not known

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/exchange/polkadex/polkadex_exchange.py", line 265, in _initialize_trading_pair_symbol_map
    mapping = await self._data_source.symbols_map()
  File "/home/hummingbot/hummingbot/connector/exchange/polkadex/polkadex_data_source.py", line 170, in symbols_map
    assets_map = await self.assets_map()
  File "/home/hummingbot/hummingbot/connector/exchange/polkadex/polkadex_data_source.py", line 153, in assets_map
    all_assets = await self._query_executor.all_assets()
  File "/home/hummingbot/hummingbot/connector/exchange/polkadex/polkadex_query_executor.py", line 109, in all_assets
    result = await self._execute_query(query=query, parameters=parameters)
  File "/home/hummingbot/hummingbot/connector/exchange/polkadex/polkadex_query_executor.py", line 376, in _execute_query
    result = await session.execute(query, variable_values=parameters, parse_result=True)
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/gql/client.py", line 1220, in execute
    result = await self._execute(
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/gql/client.py", line 1126, in _execute
    result = await asyncio.wait_for(
  File "/opt/conda/envs/hummingbot/lib/python3.8/asyncio/tasks.py", line 483, in wait_for
    return fut.result()
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/gql/transport/aiohttp.py", line 296, in execute
    async with self.session.post(self.url, ssl=self.ssl, **post_args) as resp:
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/client.py", line 1141, in __aenter__
    self._resp = await self._coro
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/client.py", line 536, in _request
    conn = await self._connector.connect(
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 540, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 901, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1166, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host gu5xqmhhcnfeveotzwhe6ohfba.appsync-api.eu-central-1.amazonaws.com:443 ssl:False [Name or service not known]
2023-07-19 15:06:01,270 - 1 - hummingbot.connector.time_synchronizer - NETWORK - Error getting server time.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/time_synchronizer.py", line 65, in update_server_time_offset_with_time_provider
    server_time_ms: float = await time_provider
  File "/home/hummingbot/hummingbot/connector/exchange/bybit/bybit_web_utils.py", line 116, in get_current_server_time
    response = await api_request(
  File "/home/hummingbot/hummingbot/connector/exchange/bybit/bybit_web_utils.py", line 103, in api_request
    raise IOError(f"Error executing request {method.name} {path}. "
OSError: Error executing request GET /spot/v1/time. HTTP status is 403. Error: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>403 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The Amazon CloudFront distribution is configured to block access from your country.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: nEZUjF8IEAA5RUizvu1K6Xe6NVzJxF73DGc2cRECB0LSyA-tuu-uLA==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>
2023-07-19 15:06:01,272 - 1 - hummingbot.connector.time_synchronizer - WARNING - Could not refresh server time. Check network connection.
2023-07-19 15:06:01,281 - 1 - hummingbot.connector.time_synchronizer - NETWORK - Error getting server time.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/time_synchronizer.py", line 65, in update_server_time_offset_with_time_provider
    server_time_ms: float = await time_provider
  File "/home/hummingbot/hummingbot/connector/derivative/bybit_perpetual/bybit_perpetual_web_utils.py", line 56, in get_current_server_time
    response = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://api.bybit.com/v2/public/time. HTTP status is 403. Error: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>403 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The Amazon CloudFront distribution is configured to block access from your country.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: QVOzK0mShN3W-bye-8UWG11CW10Xx2bRMobdzHF9gLxr_gJbHs7sIQ==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>
2023-07-19 15:06:01,285 - 1 - hummingbot.connector.time_synchronizer - WARNING - Could not refresh server time. Check network connection.
2023-07-19 15:06:01,686 - 1 - hummingbot.connector.time_synchronizer - NETWORK - Error getting server time.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/time_synchronizer.py", line 65, in update_server_time_offset_with_time_provider
    server_time_ms: float = await time_provider
  File "/home/hummingbot/hummingbot/connector/derivative/bybit_perpetual/bybit_perpetual_web_utils.py", line 56, in get_current_server_time
    response = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://api.bybit.com/v2/public/time. HTTP status is 403. Error: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>403 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The Amazon CloudFront distribution is configured to block access from your country.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: cFsguFP53Tz21Bv9MvOse6VN-4vMy9OyJsNva_3lThnSKe5G8b4-VA==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>
2023-07-19 15:06:01,688 - 1 - hummingbot.connector.time_synchronizer - WARNING - Could not refresh server time. Check network connection.
2023-07-19 15:06:01,864 - 1 - hummingbot.connector.exchange.binance.binance_exchange.BinanceExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1088, in _initialize_trading_pair_symbol_map
    exchange_info = await self._make_trading_pairs_request()
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1101, in _make_trading_pairs_request
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path)
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 892, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 934, in _api_request
    request_result = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://api.binance.com/api/v3/exchangeInfo. HTTP status is 451. Error: {
  "code": 0,
  "msg": "Service unavailable from a restricted location according to 'b. Eligibility' in https://www.binance.com/en/terms. Please contact customer service if you believe you received this message in error."
}
2023-07-19 15:06:01,892 - 1 - hummingbot.connector.time_synchronizer - NETWORK - Error getting server time.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/time_synchronizer.py", line 65, in update_server_time_offset_with_time_provider
    server_time_ms: float = await time_provider
  File "/home/hummingbot/hummingbot/connector/exchange/binance/binance_web_utils.py", line 69, in get_current_server_time
    response = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://api.binance.com/api/v3/time. HTTP status is 451. Error: {
  "code": 0,
  "msg": "Service unavailable from a restricted location according to 'b. Eligibility' in https://www.binance.com/en/terms. Please contact customer service if you believe you received this message in error."
}
2023-07-19 15:06:01,894 - 1 - hummingbot.connector.time_synchronizer - WARNING - Could not refresh server time. Check network connection.
2023-07-19 15:06:02,065 - 1 - hummingbot.connector.exchange.bybit.bybit_exchange.BybitExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1088, in _initialize_trading_pair_symbol_map
    exchange_info = await self._make_trading_pairs_request()
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1101, in _make_trading_pairs_request
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path)
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 892, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/home/hummingbot/hummingbot/connector/exchange/bybit/bybit_exchange.py", line 473, in _api_request
    request_result = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://api.bybit.com/spot/v1/symbols. HTTP status is 403. Error: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>403 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The Amazon CloudFront distribution is configured to block access from your country.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: jXibDRsLUAKH-s6OyNEv-2iWX4GYnIW_T8K9HHPOXhgxeed-dQCmRQ==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>
2023-07-19 15:06:02,561 - 1 - hummingbot.connector.derivative.kucoin_perpetual.kucoin_perpetual_derivative.KucoinPerpetualDerivative - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1152, in _create_direct_connection
    hosts = await asyncio.shield(host_resolved)
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 874, in _resolve_host
    addrs = await self._resolver.resolve(host, port, family=self._family)
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/resolver.py", line 33, in resolve
    infos = await self._loop.getaddrinfo(
  File "/opt/conda/envs/hummingbot/lib/python3.8/asyncio/base_events.py", line 825, in getaddrinfo
    return await self.run_in_executor(
  File "/opt/conda/envs/hummingbot/lib/python3.8/concurrent/futures/thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/opt/conda/envs/hummingbot/lib/python3.8/socket.py", line 918, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -2] Name or service not known

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_derivative.py", line 789, in _initialize_trading_pair_symbol_map
    all_exchange_info = await self._market_data_for_all_product_types()
  File "/home/hummingbot/hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_derivative.py", line 780, in _market_data_for_all_product_types
    exchange_info = await self._api_get(
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 892, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/home/hummingbot/hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_derivative.py", line 936, in _api_request
    resp = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 66, in execute_request
    response = await self.call(request=request, timeout=timeout)
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 84, in call
    resp = await wait_for(self._connection.call(request), timeout)
  File "/opt/conda/envs/hummingbot/lib/python3.8/asyncio/tasks.py", line 455, in wait_for
    return await fut
  File "/home/hummingbot/hummingbot/core/web_assistant/connections/rest_connection.py", line 10, in call
    aiohttp_resp = await self._client_session.request(
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/client.py", line 536, in _request
    conn = await self._connector.connect(
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 540, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 901, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "/opt/conda/envs/hummingbot/lib/python3.8/site-packages/aiohttp/connector.py", line 1166, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host api-sandbox-futures.kucoin.com:443 ssl:default [Name or service not known]
2023-07-19 15:06:02,647 - 1 - hummingbot.connector.exchange.bybit.bybit_exchange.BybitExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1088, in _initialize_trading_pair_symbol_map
    exchange_info = await self._make_trading_pairs_request()
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1101, in _make_trading_pairs_request
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path)
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 892, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/home/hummingbot/hummingbot/connector/exchange/bybit/bybit_exchange.py", line 473, in _api_request
    request_result = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://api-testnet.bybit.com/spot/v1/symbols. HTTP status is 403. Error: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>403 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The Amazon CloudFront distribution is configured to block access from your country.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: wFxGNPIB9n4RSUxWet3MBORGL8b7yHJMkkOAOFKQi3fuabUwoqBI-g==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>
2023-07-19 15:06:02,674 - 1 - hummingbot.connector.derivative.bybit_perpetual.bybit_perpetual_derivative.BybitPerpetualDerivative - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1088, in _initialize_trading_pair_symbol_map
    exchange_info = await self._make_trading_pairs_request()
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1101, in _make_trading_pairs_request
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path)
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 892, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/home/hummingbot/hummingbot/connector/derivative/bybit_perpetual/bybit_perpetual_derivative.py", line 868, in _api_request
    resp = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://api-testnet.bybit.com/v2/public/symbols. HTTP status is 403. Error: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>403 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The Amazon CloudFront distribution is configured to block access from your country.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: haz0qduBq_3cRud2VtwuZbuQ0U8D6vzZ2L2aptxrw9p2CFEyziDvew==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>
2023-07-19 15:06:02,860 - 1 - hummingbot.connector.derivative.bybit_perpetual.bybit_perpetual_derivative.BybitPerpetualDerivative - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1088, in _initialize_trading_pair_symbol_map
    exchange_info = await self._make_trading_pairs_request()
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1101, in _make_trading_pairs_request
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path)
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 892, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/home/hummingbot/hummingbot/connector/derivative/bybit_perpetual/bybit_perpetual_derivative.py", line 868, in _api_request
    resp = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://api.bybit.com/v2/public/symbols. HTTP status is 403. Error: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML><HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<TITLE>ERROR: The request could not be satisfied</TITLE>
</HEAD><BODY>
<H1>403 ERROR</H1>
<H2>The request could not be satisfied.</H2>
<HR noshade size="1px">
The Amazon CloudFront distribution is configured to block access from your country.
We can't connect to the server for this app or website at this time. There might be too much traffic or a configuration error. Try again later, or contact the app or website owner.
<BR clear="all">
If you provide content to customers through CloudFront, you can find steps to troubleshoot and help prevent this error by reviewing the CloudFront documentation.
<BR clear="all">
<HR noshade size="1px">
<PRE>
Generated by cloudfront (CloudFront)
Request ID: _dm5qKsR5ihfh7x1_DG9yTRz6otjpPi9_8VhRwktT6aU-Xsu0R3nrQ==
</PRE>
<ADDRESS>
</ADDRESS>
</BODY></HTML>
2023-07-19 15:06:03,268 - 1 - hummingbot.connector.exchange.binance.binance_exchange.BinanceExchange - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1088, in _initialize_trading_pair_symbol_map
    exchange_info = await self._make_trading_pairs_request()
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1101, in _make_trading_pairs_request
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path)
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 892, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 934, in _api_request
    request_result = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://api.binance.com/api/v3/exchangeInfo. HTTP status is 451. Error: {
  "code": 0,
  "msg": "Service unavailable from a restricted location according to 'b. Eligibility' in https://www.binance.com/en/terms. Please contact customer service if you believe you received this message in error."
}
2023-07-19 15:06:03,384 - 1 - hummingbot.connector.time_synchronizer - NETWORK - Error getting server time.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/time_synchronizer.py", line 65, in update_server_time_offset_with_time_provider
    server_time_ms: float = await time_provider
  File "/home/hummingbot/hummingbot/connector/derivative/binance_perpetual/binance_perpetual_web_utils.py", line 74, in get_current_server_time
    response = await rest_assistant.execute_request(
  File "/home/hummingbot/hummingbot/core/web_assistant/rest_assistant.py", line 75, in execute_request
    raise IOError(f"Error executing request {method.name} {url}. HTTP status is {response.status}. "
OSError: Error executing request GET https://fapi.binance.com/fapi/v1/time. HTTP status is 451. Error: {
  "code": 0,
  "msg": "Service unavailable from a restricted location according to 'b. Eligibility' in https://www.binance.com/en/terms. Please contact customer service if you believe you received this message in error."
}
2023-07-19 15:06:03,390 - 1 - hummingbot.connector.time_synchronizer - WARNING - Could not refresh server time. Check network connection.
2023-07-19 15:06:04,923 - 1 - hummingbot.connector.derivative.binance_perpetual.binance_perpetual_derivative.BinancePerpetualDerivative - ERROR - There was an error requesting exchange info.
Traceback (most recent call last):
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1088, in _initialize_trading_pair_symbol_map
    exchange_info = await self._make_trading_pairs_request()
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 1101, in _make_trading_pairs_request
    exchange_info = await self._api_get(path_url=self.trading_pairs_request_path)
  File "/home/hummingbot/hummingbot/connector/exchange_py_base.py", line 892, in _api_get
    return await self._api_request(*args, **kwargs)
  File "/home/hummingbot/hummingbot/connector/derivative/binance_perpetual/binance_perpetual_derivative.py", line 857, in _api_request
    raise IOError(f"Error executing request {method.name} {path_url}. "
OSError: Error executing request GET /exchangeInfo. HTTP status is 451. Error: {
  "code": 0,
  "msg": "Service unavailable from a restricted location according to 'b. Eligibility' in https://www.binance.com/en/terms. Please contact customer service if you believe you received this message in error."
}
2023-07-19 15:10:04,548 - 1 - hummingbot.remote_iface.mqtt - INFO - Created Node <hbot.hbot1>
2023-07-19 15:10:04,719 - 1 - hummingbot.client.hummingbot_application - INFO - Connecting MQTT Bridge...
2023-07-19 15:10:05,729 - 1 - hummingbot.client.hummingbot_application - INFO - MQTT Bridge connected with success.
2023-07-20 02:42:09,198 - 1 - hummingbot.client.hummingbot_application - WARNING - MQTT Gateway is disconnected, attempting to reconnect.
2023-07-20 02:42:20,202 - 1 - hummingbot.client.hummingbot_application - WARNING - MQTT Gateway successfully reconnected.
2023-07-20 08:18:04,342 - 1 - hummingbot.client.hummingbot_application - WARNING - MQTT Gateway is disconnected, attempting to reconnect.
2023-07-20 08:18:14,762 - 1 - hummingbot.client.hummingbot_application - WARNING - MQTT Gateway successfully reconnected.
2023-07-20 08:43:10,158 - 1 - hummingbot.client.hummingbot_application - WARNING - MQTT Gateway is disconnected, attempting to reconnect.
2023-07-20 08:43:21,252 - 1 - hummingbot.client.hummingbot_application - WARNING - MQTT Gateway successfully reconnected.
2023-07-20 14:15:00,383 - 1 - hummingbot.client.hummingbot_application - WARNING - MQTT Gateway is disconnected, attempting to reconnect.
2023-07-20 14:15:10,656 - 1 - hummingbot.client.hummingbot_application - WARNING - MQTT Gateway successfully reconnected.
